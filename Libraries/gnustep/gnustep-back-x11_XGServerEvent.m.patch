--- gnustep-back-0.24.1.orig/Source/x11/XGServerEvent.m	2015-03-22 17:15:20.000000000 +0200
+++ gnustep-back-0.24.1/Source/x11/XGServerEvent.m	2018-11-07 02:09:24.345560669 +0200
@@ -42,6 +42,7 @@
 #include <Foundation/NSUserDefaults.h>
 #include <Foundation/NSRunLoop.h>
 #include <Foundation/NSDebug.h>
+#include <Foundation/NSDistributedNotificationCenter.h>
 
 #include "x11/XGServerWindow.h"
 #include "x11/XGInputServer.h"
@@ -313,6 +314,12 @@
 
 /*
  */
+static NSInteger   clickTime;
+static NSInteger   clickMove;
+static NSInteger   mouseScrollMultiplier;
+static BOOL        swapMouseButtons;
+static NSEventType menuMouseButton;
+static BOOL        menuButtonEnabled;
 - (NSPoint) _XPointToOSPoint: (NSPoint)x for: (void*)window
 {
   gswindow_device_t *win = (gswindow_device_t*)window;
@@ -329,6 +336,54 @@
   return o;
 }
 
+- (void) initializeMouse
+{
+  [self mouseOptionsChanged:nil];
+  [[NSDistributedNotificationCenter defaultCenter]
+    addObserver: self
+       selector: @selector(mouseOptionsChanged:)
+           name: @"GSMouseOptionsDidChangeNotification"
+         object: nil];
+}
+
+- (void) mouseOptionsChanged: (NSNotification *)aNotif
+{
+  NSUserDefaults *defs = [NSUserDefaults standardUserDefaults];
+
+  [defs synchronize];
+
+  clickTime = [defs integerForKey:@"GSDoubleClickTime"];
+  if (clickTime < 250)
+    clickTime = 250;
+  
+  clickMove = [defs integerForKey:@"GSMouseMoveThreshold"];
+  if (clickMove < 3)
+    clickMove = 3;
+
+  mouseScrollMultiplier = [defs integerForKey:@"GSMouseScrollMultiplier"];
+  if (mouseScrollMultiplier == 0)
+    mouseScrollMultiplier = 1;
+
+  if ([defs objectForKey:@"GSMenuButtonEnabled"])
+    menuButtonEnabled = [defs boolForKey:@"GSMenuButtonEnabled"];
+  else
+    menuButtonEnabled = YES;
+
+  if ([defs objectForKey:@"GSMenuButtonEvent"])
+    menuMouseButton = [defs integerForKey:@"GSMenuButtonEvent"];
+  else
+    menuMouseButton = NSRightMouseDown;
+  
+  switch (menuMouseButton)
+    {
+    case NSLeftMouseDown:
+      swapMouseButtons = YES;
+      break;
+    default:
+      swapMouseButtons = NO;
+      break;
+    }
+}
 
 - (void) processEvent: (XEvent *) event
 {
@@ -367,21 +422,21 @@
          */
         {
           BOOL incrementCount = YES;
-
-#define CLICK_TIME 300
-#define CLICK_MOVE 3
+          
+          if (clickTime == 0) [self initializeMouse];
+         
           if (xEvent.xbutton.time
-            >= (unsigned long)(generic.lastClick + CLICK_TIME))
+            >= (unsigned long)(generic.lastClick + clickTime))
             incrementCount = NO;
           else if (generic.lastClickWindow != xEvent.xbutton.window)
             incrementCount = NO;
-          else if ((generic.lastClickX - xEvent.xbutton.x) > CLICK_MOVE)
+          else if ((generic.lastClickX - xEvent.xbutton.x) > clickMove)
             incrementCount = NO;
-          else if ((generic.lastClickX - xEvent.xbutton.x) < -CLICK_MOVE)
+          else if ((generic.lastClickX - xEvent.xbutton.x) < -clickMove)
             incrementCount = NO;
-          else if ((generic.lastClickY - xEvent.xbutton.y) > CLICK_MOVE)
+          else if ((generic.lastClickY - xEvent.xbutton.y) > clickMove)
             incrementCount = NO;
-          else if ((generic.lastClickY - xEvent.xbutton.y) < -CLICK_MOVE)
+          else if ((generic.lastClickY - xEvent.xbutton.y) < -clickMove)
             incrementCount = NO;
 
           if (incrementCount == YES)
@@ -408,14 +463,30 @@
 
         if (xEvent.xbutton.button == generic.lMouse)
           {
-            eventType = NSLeftMouseDown;
-            buttonNumber = generic.lMouse;
+            if (swapMouseButtons)
+              {
+                eventType = NSRightMouseDown;
+                buttonNumber = generic.rMouse;
+              }
+            else
+              {
+                eventType = NSLeftMouseDown;
+                buttonNumber = generic.lMouse;
+              }
           }
         else if (xEvent.xbutton.button == generic.rMouse
           && generic.rMouse != 0)
           {
-            eventType = NSRightMouseDown;
-            buttonNumber = generic.rMouse;
+            if (swapMouseButtons)
+              {
+                eventType = NSLeftMouseDown;
+                buttonNumber = generic.lMouse;
+              }
+            else
+              {
+                eventType = NSRightMouseDown;
+                buttonNumber = generic.rMouse;
+              }
           }
         else if (xEvent.xbutton.button == generic.mMouse
           && generic.mMouse != 0)
@@ -426,28 +497,28 @@
         else if (xEvent.xbutton.button == generic.upMouse
           && generic.upMouse != 0)
           {
-            deltaY = 1.;
+            deltaY = 1. * mouseScrollMultiplier;
             eventType = NSScrollWheel;
             buttonNumber = generic.upMouse;
           }
         else if (xEvent.xbutton.button == generic.downMouse
           && generic.downMouse != 0)
           {
-            deltaY = -1.;
+            deltaY = -1. * mouseScrollMultiplier;
             eventType = NSScrollWheel;
             buttonNumber = generic.downMouse;
           }
         else if (xEvent.xbutton.button == generic.scrollLeftMouse
           && generic.scrollLeftMouse != 0)
           {
-            deltaX = -1.;
+            deltaX = -1. * mouseScrollMultiplier;
             eventType = NSScrollWheel;
             buttonNumber = generic.scrollLeftMouse;
           }
         else if (xEvent.xbutton.button == generic.scrollRightMouse
           && generic.scrollRightMouse != 0)
           {
-            deltaX = 1.;
+            deltaX = 1. * mouseScrollMultiplier;
             eventType = NSScrollWheel;
             buttonNumber = generic.scrollRightMouse;
           }
@@ -456,6 +527,9 @@
             break;                /* Unknown button */
           }
 
+        if (menuButtonEnabled == NO && eventType == menuMouseButton)
+          break; // disabled menu button was pressed
+
         eventFlags = process_modifier_flags(xEvent.xbutton.state);
         // if pointer is grabbed use grab window
         xWin = (grabWindow == 0) ? xEvent.xbutton.window : grabWindow;
@@ -511,14 +585,30 @@
         [self setLastTime: xEvent.xbutton.time];
         if (xEvent.xbutton.button == generic.lMouse)
           {
-            eventType = NSLeftMouseUp;
-            buttonNumber = generic.lMouse;
+            if (swapMouseButtons)
+              {
+                eventType = NSRightMouseUp;
+                buttonNumber = generic.rMouse;
+              }
+            else
+              {
+                eventType = NSLeftMouseUp;
+                buttonNumber = generic.lMouse;
+              }
           }
         else if (xEvent.xbutton.button == generic.rMouse
           && generic.rMouse != 0)
           {
-            eventType = NSRightMouseUp;
-            buttonNumber = generic.rMouse;
+            if (swapMouseButtons)
+              {
+                eventType = NSLeftMouseUp;
+                buttonNumber = generic.lMouse;
+              }
+            else
+              {
+                eventType = NSRightMouseUp;
+                buttonNumber = generic.rMouse;
+              }
           }
         else if (xEvent.xbutton.button == generic.mMouse
           && generic.mMouse != 0)
@@ -621,6 +711,20 @@
                                data1: 0
                                data2: 0];
                 }
+              else if ((Atom)xEvent.xclient.data.l[0] == generic.hide_app_atom)
+                {
+		  NSDebugLLog(@"Hide", @"%lu application will be hidden", cWin->number);
+                  eventLocation = NSMakePoint(0,0);
+                  e = [NSEvent otherEventWithType: NSAppKitDefined
+                               location: eventLocation
+                               modifierFlags: 0
+                               timestamp: 0
+                               windowNumber: cWin->number
+                               context: gcontext
+                               subtype: GSAppKitAppHide
+                               data1: 0
+                               data2: 0];
+                }
               else if ((Atom)xEvent.xclient.data.l[0]
                 == generic.take_focus_atom)
                 {
@@ -1812,6 +1916,7 @@
     {
       NSDebugLLog(@"Focus", @"Ignoring window focus request");
       cWin->ignore_take_focus = NO;
+      [GSServerForWindow(key_win) setinputfocus: cWin->number];
     }
   else if (cWin->number == key_num)
     {
