--- gnustep-gui-0.24.1.orig/Source/NSApplication.m	2015-03-27 23:33:24.000000000 +0200
+++ gnustep-gui-0.24.1/Source/NSApplication.m	2019-03-04 02:13:29.380728072 +0200
@@ -433,6 +433,11 @@
   return NO;
 }
 
+- (BOOL) becomesKeyOnlyIfNeeded
+{
+  return YES;
+}
+
 - (BOOL) worksWhenModal
 {
   return YES;
@@ -541,6 +546,11 @@
   return YES;
 }
 
+- (BOOL) needsPanelToBecomeKey
+{
+  return NO;
+}
+
 - (void) concludeDragOperation: (id<NSDraggingInfo>)sender
 {
 }
@@ -1334,6 +1344,13 @@
           postNotificationName: NSApplicationDidBecomeActiveNotification
 		      object: [NSWorkspace sharedWorkspace]
           userInfo: info];
+
+      if ([[[NSUserDefaults standardUserDefaults]
+             objectForKey: @"NXAutoLaunch"] isEqualToString: @"YES"])
+        {
+          _app_is_active = NO;
+          [[NSUserDefaults standardUserDefaults] removeSuiteNamed: NSArgumentDomain];
+        }
     }
 }
 
@@ -2450,31 +2467,35 @@
 	      _hidden_main = [self mainWindow];
 	      [_hidden_main resignMainWindow];
 	    }
+          
+          win = [[self mainMenu] window];
+          if ([GSServerForWindow(win) hidewindow: [win windowNumber]] == NO)
+            {
+              windows_list = GSOrderedWindows();
+              iter = [windows_list reverseObjectEnumerator];
 	  
-	  windows_list = GSOrderedWindows();
-	  iter = [windows_list reverseObjectEnumerator];
-	  
-	  while ((win = [iter nextObject]))
-	    {
-	      if ([win isVisible] == NO && ![win isMiniaturized])
-		{
-		  continue;		/* Already invisible	*/
-		}
-	      if ([win canHide] == NO)
-		{
-		  continue;		/* Not hideable	*/
-		}
-	      if (win == _app_icon_window)
-		{
-		  continue;		/* can't hide the app icon.	*/
-		}
-	      if (_app_is_active == YES && [win hidesOnDeactivate] == YES)
-		{
-		  continue;		/* Will be hidden by deactivation	*/
-		}
-	      [_hidden addObject: win];
-	      [win orderOut: self];
-	    }
+              while ((win = [iter nextObject]))
+                {
+                  if ([win isVisible] == NO && ![win isMiniaturized])
+                    {
+                      continue;		/* Already invisible	*/
+                    }
+                  if ([win canHide] == NO)
+                    {
+                      continue;		/* Not hideable	*/
+                    }
+                  if (win == _app_icon_window)
+                    {
+                      continue;		/* can't hide the app icon.	*/
+                    }
+                  if (_app_is_active == YES && [win hidesOnDeactivate] == YES)
+                    {
+                      continue;		/* Will be hidden by deactivation	*/
+                    }
+                  [_hidden addObject: win];
+                  [win orderOut: self];
+                }
+            }
 	  _app_is_hidden = YES;
 	  
 	  if (YES == [[NSUserDefaults standardUserDefaults]
